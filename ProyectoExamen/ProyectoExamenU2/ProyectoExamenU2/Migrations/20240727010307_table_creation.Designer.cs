// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoExamenU2.Database;

#nullable disable

namespace ProyectoExamenU2.Migrations
{
    [DbContext(typeof(ProyectoExamenU2Context))]
    [Migration("20240727010307_table_creation")]
    partial class table_creation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoExamenU2.Database.Entities.AmortizationPlanEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("Day")
                        .HasColumnType("int")
                        .HasColumnName("day");

                    b.Property<int>("InstallmentNumber")
                        .HasColumnType("int")
                        .HasColumnName("installment_number");

                    b.Property<double>("Interest")
                        .HasColumnType("float")
                        .HasColumnName("interest");

                    b.Property<double>("LevelPaymentWithSVSD")
                        .HasColumnType("float")
                        .HasColumnName("level_payment_with_SVSD");

                    b.Property<double>("LevelPaymentWithoutSVSD")
                        .HasColumnType("float")
                        .HasColumnName("level_payment_without_SVSD");

                    b.Property<Guid>("LoanId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("loan_id");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("payment_date");

                    b.Property<double>("Principal")
                        .HasColumnType("float")
                        .HasColumnName("principal");

                    b.Property<double>("PrincipalBalance")
                        .HasColumnType("float")
                        .HasColumnName("principal_balance");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("amortization_plans", "dbo");
                });

            modelBuilder.Entity("ProyectoExamenU2.Database.Entities.ClientEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("Identity")
                        .HasColumnType("int")
                        .HasColumnName("identity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("clients", "dbo");
                });

            modelBuilder.Entity("ProyectoExamenU2.Database.Entities.LoanEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("client_id");

                    b.Property<double>("CommissionRate")
                        .HasColumnType("float")
                        .HasColumnName("comission_rate");

                    b.Property<DateTime>("DisbursementDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("disbursement_date");

                    b.Property<DateTime>("FirstPaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("first_payment_day");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float")
                        .HasColumnName("interest_rate");

                    b.Property<double>("LoanAmount")
                        .HasColumnType("float")
                        .HasColumnName("loan_amount");

                    b.Property<int>("Term")
                        .HasColumnType("int")
                        .HasColumnName("term");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("loans", "dbo");
                });

            modelBuilder.Entity("ProyectoExamenU2.Database.Entities.AmortizationPlanEntity", b =>
                {
                    b.HasOne("ProyectoExamenU2.Database.Entities.LoanEntity", "Loan")
                        .WithMany("AmortizationPlans")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("ProyectoExamenU2.Database.Entities.LoanEntity", b =>
                {
                    b.HasOne("ProyectoExamenU2.Database.Entities.ClientEntity", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ProyectoExamenU2.Database.Entities.LoanEntity", b =>
                {
                    b.Navigation("AmortizationPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
